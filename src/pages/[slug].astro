---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import Layout from '../layouts/Layout.astro'
import { Image } from 'astro:assets'
import appleMusicIconImage from '../assets/images/icons/apple-music.webp'
import spotifyIconImage from '../assets/images/icons/spotify.webp'

export const getStaticPaths = (async () => {
  const tabs = await getCollection('tabs')

  return tabs.map((tab) => ({
    params: { slug: tab.slug },
    props: tab,
  }))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const tab = Astro.props as Props
const data = tab.data
const { Content } = await tab.render()

function formatNumberWithOrdinalSuffix(value: number): string {
  const suffix = ['th', 'st', 'nd', 'rd']
  const units = value % 100
  return value + (suffix[(units - 20) % 10] ?? suffix[units] ?? suffix[0])
}
---

<Layout title={`${data.title} - Tino's Tabs`}>
  {/* TODO a way to get to the index/home page */}
  <div class="flex flex-col items-center gap-4 mb-8">
    <div
      class="relative shadow-2xl rounded-md after:content-[''] after:rounded-md after:absolute after:inset-0 after:ring-1 after:ring-inset after:ring-black/10"
    >
      <Image
        src={data.albumImageURL}
        alt="Album Cover"
        class="w-44 h-4w-44 rounded-md"
      />
    </div>
    <div class="flex flex-col items-center">
      <h1 class="font-semibold text-2xl">{data.title}</h1>
      <h2 class="text-stone-500">{`${data.album} â€¢ ${data.artist}`}</h2>
    </div>
    <div
      class="bg-stone-50 flex self-stretch divide-x p-1.5 rounded-md text-sm"
    >
      <div class="flex-1 text-center text-stone-500">
        Tuning <span class="text-stone-900 font-medium">{data.tuning}</span>
      </div>
      <div class="flex-1 text-center text-stone-500">
        Capo <span class="text-stone-900 font-medium"
          >{
            data.capo
              ? `${formatNumberWithOrdinalSuffix(data.capo)} fret`
              : 'None'
          }</span
        >
      </div>
    </div>
    {/* TODO use actual links, add to frontmatter */}
    <div class="flex gap-3 self-stretch">
      <a
        href={data.spotifyURL}
        target="_blank"
        class="text-center border border-stone-300 rounded-full flex-1 px-2 py-1 text-stone-500 font-medium shadow-[0_1px_0_theme(colors.stone.300),0_2px_2px_0_rgb(0_0_0_/_0.05)] flex items-center gap-2 justify-center active:translate-y-[1px] active:shadow-none transition-all active:bg-stone-50 hover:bg-stone-50"
      >
        <span>
          Play on <span class="hidden sm:inline">Spotify</span>
        </span>
        <span
          class="relative rounded after:content-[''] after:rounded after:absolute after:inset-0 after:ring-1 after:ring-inset after:ring-black/10"
        >
          <Image src={spotifyIconImage} alt="Spotify" class="w-5 h-5 rounded" />
        </span>
      </a>
      <a
        href={data.appleMusicURL}
        target="_blank"
        class="text-center border border-stone-300 rounded-full flex-1 px-2 py-1 text-stone-500 font-medium shadow-[0_1px_0_theme(colors.stone.300),0_2px_2px_0_rgb(0_0_0_/_0.05)] flex items-center gap-2 justify-center active:translate-y-[1px] active:shadow-none transition-all active:bg-stone-50 hover:bg-stone-50"
      >
        <span>
          Play on <span class="hidden sm:inline">Apple Music</span>
        </span>
        <span
          class="relative rounded after:content-[''] after:rounded after:absolute after:inset-0 after:ring-1 after:ring-inset after:ring-black/10"
        >
          <Image
            src={appleMusicIconImage}
            alt="Apple Music"
            class="w-5 h-5 rounded"
          />
        </span>
      </a>
    </div>
  </div>

  <h2 class="font-semibold text-lg my-4">Useful Videos</h2>
  <div
    class="flex gap-4 mx-[calc(-50vw+50%)] px-[calc(50vw-50%)] py-5 -my-5 overflow-x-auto"
  >
    {
      [...new Array(1)].map((item) => (
        <div class="max-w-[75%] bg-stone-50 rounded-xl relative shrink-0 basis-[75%] aspect-video shadow-lg after:content-[''] after:rounded-xl after:absolute after:inset-0 after:ring-1 after:ring-inset after:ring-black/10 after:pointer-events-none">
          <iframe
            class="rounded-xl w-full aspect-video"
            src="https://www.youtube.com/embed/eZHBH1MoT3g"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowfullscreen
          />
        </div>
      ))
    }
    <a
      href={`https://www.youtube.com/results?search_query=${(
        data.title +
        ' ' +
        data.artist
      ).replace(' ', '+')}`}
      target="_blank"
      class="cursor-pointer max-w-[75%] rounded-xl flex-col gap-2 shrink-0 basis-[75%] aspect-video border border-stone-300 flex-1 p-4 text-stone-500 font-medium shadow-[0_1px_0_theme(colors.stone.300),0_2px_2px_0_rgb(0_0_0_/_0.05)] flex items-center justify-center active:translate-y-[1px] active:shadow-none transition-all active:bg-stone-50 hover:bg-stone-50"
    >
      Search on YouTube
      <span
        class="bg-stone-100 rounded-full px-2 py-1 text-sm max-w-full flex items-center gap-1"
      >
        <svg
          class="text-stone-400 shrink-0"
          width="16"
          height="16"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M21 21L15.0001 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
          </path>
        </svg>
        <span class="truncate">
          {`${data.title} ${data.artist}`}
        </span>
      </span>
    </a>
  </div>
  <!-- <Content /> -->
</Layout>
